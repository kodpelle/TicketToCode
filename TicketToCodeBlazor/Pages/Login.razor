@page "/login"
@inject HttpClient HttpClient
@inject NavigationManager Navigation
@using System.Text.Json
@using System.Text
@inject IAccountManagement Acct


<div class="login-page">
    <button class="logo-button" @onclick="GoToHome">
        <svg viewBox="0 0 24 24">
            <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" />
        </svg>
    </button>

    <div class="login-container">
        <h1 class="login-title">Welcome Back</h1>
        <p class="login-subtitle">Sign in to access your account</p>

        <div class="form-group">
            <label class="form-label">Email</label>
            <input @bind="email" class="form-control" placeholder="Enter your email" />
        </div>

        <div class="form-group">
            <label class="form-label">Password</label>
            <input @bind="password" type="password" class="form-control" placeholder="Enter your password" />
        </div>

        @if (!string.IsNullOrEmpty(responseMessage))
        {
            <div class="validation-message">@responseMessage</div>
        }

        <button @onclick="LoginUser" class="btn-primary">Log In</button>

        <div class="register-link">
            Don't have an account? <a href="/register">Register now</a>
        </div>
    </div>
</div>

@code {
    private string email = "";
    private string password = "";
    private string responseMessage = "";
    private FormResult formResult = new();

    private async Task LoginUser()
    {
        if (string.IsNullOrWhiteSpace(email) || string.IsNullOrWhiteSpace(password))
        {
            responseMessage = "email and password cannot be empty!";
            return;
        }
        try
        {
            formResult = await Acct.LoginAsync(email, password);

            if (formResult.Succeeded)
            {
                Navigation.NavigateTo("/events");
            }

            else
            {
                //todo: handle errors
                var responseContent = formResult.ErrorList[0];
                responseMessage = $"Login failed: {responseContent}";
            }
        }
        catch (Exception ex)
        {
            responseMessage = $"An error occurred: {ex.Message}";
        }
    }
    private void GoToHome()
    {
        Navigation.NavigateTo("/");
    }
}
