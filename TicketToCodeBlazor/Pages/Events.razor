@page "/events"
@inject EventService EventService
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider

<div class="events-page">
    <button class="logo-button" @onclick="GoToHome">
        <svg viewBox="0 0 24 24">
            <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" />
        </svg>
    </button>

    <div class="events-header">
        <h1 class="events-title">Upcoming Events</h1>
        <p class="events-subtitle">Discover and join amazing events in your area</p>
    </div>

    <div class="events-actions">
        <div class="search-box">
            <input type="text" class="search-input" placeholder="Search events..." />
        </div>
        <AuthorizeView Roles="Admin">
    <Authorized>
        <a href="/create-event" class="btn-create">
                    <span>Create Event</span>
                </a>
        <a href="/bookings" class="btn-create">
                 <span>Manage bookings</span>
                </a>
        </Authorized>
        </AuthorizeView>
    </div>
    
    @if (events == null)
    {
        <div class="events-loading">Loading events...</div>
    }
    else if (events.Count == 0)
    {
        <div class="events-empty">No events found</div>
    }
    else
    {
        <div class="events-grid">
            @foreach (var ev in events)
            {
                <div class="event-card">
                    <h3 class="event-title">@ev.Name</h3>
                    <p class="event-date">@ev.Start.ToString("MMM dd, yyyy")</p>
                    <p class="event-description">@ev.Description</p>
                    <div class="event-footer">
                        <span class="event-type">@ev.Type</span>
                        <a href="@($"/event/{ev.Id}")" class="event-details-link">View Details</a>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<EventDto>? events;
    protected override async Task OnInitializedAsync()
    {
        events = await EventService.GetAllEvents();
    }

    private void GoToHome()
    {
        Navigation.NavigateTo("/");
    }
}
