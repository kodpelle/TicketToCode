@page "/create-event"
@inject EventService EventService
@inject NavigationManager Navigation

<div class="create-event-page">
    <div class="create-event-container">
        <h1 class="create-event-title">Create New Event</h1>
        <p class="create-event-subtitle">Share your event with the community</p>

        <div class="form-grid">
            <div class="form-group">
                <label class="form-label">Event Name</label>
                <input @bind="newEvent.Name" class="form-control" placeholder="Enter event name" />
            </div>

            <div class="form-group">
                <label class="form-label">Event Type</label>
                <select @bind="newEvent.Type" class="form-control">
                    @foreach (var type in Enum.GetValues(typeof(EventType)))
                    {
                        <option value="@type">@type</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label class="form-label">Start Time</label>
                <input type="datetime-local" @bind="newEvent.Start" class="form-control" />
            </div>

            <div class="form-group">
                <label class="form-label">End Time</label>
                <input type="datetime-local" @bind="newEvent.End" class="form-control" />
            </div>

            <div class="form-group full-width">
                <label class="form-label">Description</label>
                <textarea @bind="newEvent.Description" class="form-control" placeholder="Describe your event"
                    rows="4"></textarea>
            </div>

            <div class="form-group full-width">
                <div class="image-upload">
                    <p class="image-upload-text">Click or drag to upload event image</p>
                </div>
            </div>
        </div>

        @if (!string.IsNullOrEmpty(responseMessage))
        {
            <div class="validation-message">@responseMessage</div>
        }

        <div class="btn-group">
            <button @onclick="CreateNewEvent" class="btn-primary">Create Event</button>
            <button @onclick="@GoToEvents" class="btn-secondary">Cancel</button>
        </div>
    </div>
</div>

@code {
    private EventDto newEvent = new EventDto();
    private string responseMessage = "";

    private async Task CreateNewEvent()
    {
        var eventId = await EventService.CreateEvent(newEvent);
        if (eventId.HasValue)
        {
            responseMessage = $"Event created successfully with ID {eventId.Value}";
            Navigation.NavigateTo($"/event/{eventId.Value}");
        }
        else
        {
            responseMessage = "Failed to create event. Please try again.";
        }
    }
    public void GoToEvents()
    {
        Navigation.NavigateTo("/events");
    }
}
