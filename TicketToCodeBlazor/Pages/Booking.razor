@page "/bookings"
@inject BookingService BookingService
@inject NavigationManager Navigation                    
@inject IJSRuntime JS


<h3>All Bookings</h3>

@if (bookings == null)
{
    <p>Loading bookings...</p>
}
else if (bookings.Count == 0)
{
    <p>No bookings found.</p>
}
else
{
    <table class="table">
        <thead> 
            <tr>        
                <th>Booking ID</th>
                <th>User ID</th>
                <th>Event ID</th>
                <th>Booking Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var booking in bookings)
            {
                <tr>
                    <td>@booking.UserId</td>
                    <td>@booking.EventId</td>
                    <td>@booking.TicketCount</td>
                    <td>@booking.BookingDate</td>
                    <td>
                        <button class="btn btn-danger" @onclick="() => DeleteBooking(booking.EventId)">Delete</button>

                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<BookingDto>? bookings;

   /* protected override async Task OnInitializedAsync()
    {
        bookings = await BookingService.GetAllBookings();
    }*/
    private async Task<bool> ConfirmDelete()
    {
        return await JS.InvokeAsync<bool>("confirm", "Are you sure you want to delete this booking?");
    }
   
    private async Task DeleteBooking(int id)
    {
        if (!await ConfirmDelete()) return; // Anropa JavaScript-funktionen

        await BookingService.DeleteBooking(id);
        bookings = await BookingService.GetAllBookings(); // Uppdatera listan
    }


}
