@page "/event/{id:int}"
@inject EventService EventService
@inject NavigationManager Navigation
@inject BookingService BookingService

<div class="event-details-page">
    <button class="logo-button" @onclick="GoToHome">
        <svg viewBox="0 0 24 24">
            <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>
        </svg>
    </button>

    @if (eventDetail == null)
    {
        <div class="loading-container">
            <div class="loading-spinner"></div>
            <p>Loading event details...</p>
        </div>
    }
    else
    {
        <div class="event-details-container">
            <div class="event-header">
                <h1 class="event-title">@eventDetail.Name</h1>
                <span class="event-type">@eventDetail.Type</span>
            </div>

            <div class="event-info-grid">
                <div class="info-card">
                    <div class="info-icon">📅</div>
                    <div class="info-content">
                        <h3>Date & Time</h3>
                        <p>Starts: @eventDetail.Start.ToString("MMM dd, yyyy HH:mm")</p>
                        <p>Ends: @eventDetail.End.ToString("MMM dd, yyyy HH:mm")</p>
                    </div>
                </div>

                <div class="info-card">
                    <div class="info-icon">👥</div>
                    <div class="info-content">
                        <h3>Capacity</h3>
                        <p>@(eventDetail.MaxAttendees > 0 ? $"Limited to {eventDetail.MaxAttendees} attendees" : "Unlimited capacity")</p>
                    </div>
                </div>
            </div>

            <div class="description-card">
                <h2>About This Event</h2>
                <p>@eventDetail.Description</p>
            </div>

            <div class="action-buttons">
                    <button @onclick="RegisterForEvent" class="btn-primary">Register Now</button>
                <button class="btn-secondary" @onclick="GoBack">Back to Events</button>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    private EventDto? eventDetail;
	private BookingDto? bookingDetail;

    protected override async Task OnInitializedAsync()
    {
        eventDetail = await EventService.GetEventById(Id);
    }

	private async Task RegisterForEvent()
	{
        var Bookingid = await BookingService.CreateBooking(bookingDetail);
	}

    private void GoBack()
    {
        Navigation.NavigateTo("/events");
    }

    private void GoToHome()
    {
        Navigation.NavigateTo("/");
    }
}
